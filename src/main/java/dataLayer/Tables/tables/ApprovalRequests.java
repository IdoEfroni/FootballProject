/*
 * This file is generated by jOOQ.
 */
package dataLayer.Tables.tables;


import dataLayer.Tables.Keys;
import dataLayer.Tables.Localsoccer;
import dataLayer.Tables.tables.records.ApprovalRequestsRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ApprovalRequests extends TableImpl<ApprovalRequestsRecord> {

    private static final long serialVersionUID = -1079508870;

    /**
     * The reference instance of <code>localsoccer.approval_requests</code>
     */
    public static final ApprovalRequests APPROVAL_REQUESTS = new ApprovalRequests();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ApprovalRequestsRecord> getRecordType() {
        return ApprovalRequestsRecord.class;
    }

    /**
     * The column <code>localsoccer.approval_requests.username</code>.
     */
    public final TableField<ApprovalRequestsRecord, String> USERNAME = createField(DSL.name("username"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>localsoccer.approval_requests.name</code>.
     */
    public final TableField<ApprovalRequestsRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>localsoccer.approval_requests.password</code>.
     */
    public final TableField<ApprovalRequestsRecord, String> PASSWORD = createField(DSL.name("password"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>localsoccer.approval_requests.userType</code>.
     */
    public final TableField<ApprovalRequestsRecord, String> USERTYPE = createField(DSL.name("userType"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * Create a <code>localsoccer.approval_requests</code> table reference
     */
    public ApprovalRequests() {
        this(DSL.name("approval_requests"), null);
    }

    /**
     * Create an aliased <code>localsoccer.approval_requests</code> table reference
     */
    public ApprovalRequests(String alias) {
        this(DSL.name(alias), APPROVAL_REQUESTS);
    }

    /**
     * Create an aliased <code>localsoccer.approval_requests</code> table reference
     */
    public ApprovalRequests(Name alias) {
        this(alias, APPROVAL_REQUESTS);
    }

    private ApprovalRequests(Name alias, Table<ApprovalRequestsRecord> aliased) {
        this(alias, aliased, null);
    }

    private ApprovalRequests(Name alias, Table<ApprovalRequestsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> ApprovalRequests(Table<O> child, ForeignKey<O, ApprovalRequestsRecord> key) {
        super(child, key, APPROVAL_REQUESTS);
    }

    @Override
    public Schema getSchema() {
        return Localsoccer.LOCALSOCCER;
    }

    @Override
    public UniqueKey<ApprovalRequestsRecord> getPrimaryKey() {
        return Keys.KEY_APPROVAL_REQUESTS_PRIMARY;
    }

    @Override
    public List<UniqueKey<ApprovalRequestsRecord>> getKeys() {
        return Arrays.<UniqueKey<ApprovalRequestsRecord>>asList(Keys.KEY_APPROVAL_REQUESTS_PRIMARY);
    }

    @Override
    public ApprovalRequests as(String alias) {
        return new ApprovalRequests(DSL.name(alias), this);
    }

    @Override
    public ApprovalRequests as(Name alias) {
        return new ApprovalRequests(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ApprovalRequests rename(String name) {
        return new ApprovalRequests(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ApprovalRequests rename(Name name) {
        return new ApprovalRequests(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
