/*
 * This file is generated by jOOQ.
 */
package dataLayer.Tables.tables;


import dataLayer.Tables.Demodb;
import dataLayer.Tables.Indexes;
import dataLayer.Tables.Keys;
import dataLayer.Tables.tables.records.GoalRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Goal extends TableImpl<GoalRecord> {

    private static final long serialVersionUID = 887592157;

    /**
     * The reference instance of <code>demodb.goal</code>
     */
    public static final Goal GOAL = new Goal();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GoalRecord> getRecordType() {
        return GoalRecord.class;
    }

    /**
     * The column <code>demodb.goal.MatchID</code>.
     */
    public final TableField<GoalRecord, Integer> MATCHID = createField(DSL.name("MatchID"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>demodb.goal.EventID</code>.
     */
    public final TableField<GoalRecord, Integer> EVENTID = createField(DSL.name("EventID"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>demodb.goal.Time</code>.
     */
    public final TableField<GoalRecord, String> TIME = createField(DSL.name("Time"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>demodb.goal.PlayerGoalID</code>.
     */
    public final TableField<GoalRecord, String> PLAYERGOALID = createField(DSL.name("PlayerGoalID"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>demodb.goal.PlayerAssistID</code>.
     */
    public final TableField<GoalRecord, String> PLAYERASSISTID = createField(DSL.name("PlayerAssistID"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>demodb.goal.isOwnGoal</code>.
     */
    public final TableField<GoalRecord, Boolean> ISOWNGOAL = createField(DSL.name("isOwnGoal"), org.jooq.impl.SQLDataType.BIT.defaultValue(org.jooq.impl.DSL.field("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "");

    /**
     * Create a <code>demodb.goal</code> table reference
     */
    public Goal() {
        this(DSL.name("goal"), null);
    }

    /**
     * Create an aliased <code>demodb.goal</code> table reference
     */
    public Goal(String alias) {
        this(DSL.name(alias), GOAL);
    }

    /**
     * Create an aliased <code>demodb.goal</code> table reference
     */
    public Goal(Name alias) {
        this(alias, GOAL);
    }

    private Goal(Name alias, Table<GoalRecord> aliased) {
        this(alias, aliased, null);
    }

    private Goal(Name alias, Table<GoalRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> Goal(Table<O> child, ForeignKey<O, GoalRecord> key) {
        super(child, key, GOAL);
    }

    @Override
    public Schema getSchema() {
        return Demodb.DEMODB;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.GOAL_MATCHID);
    }

    @Override
    public List<ForeignKey<GoalRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<GoalRecord, ?>>asList(Keys.FK_GOAL_MATCH, Keys.FK_GOAL_PLAYERS, Keys.FK_GOAL_PLAYERS_2);
    }

    public Match match() {
        return new Match(this, Keys.FK_GOAL_MATCH);
    }

    public Players fkGoalPlayers() {
        return new Players(this, Keys.FK_GOAL_PLAYERS);
    }

    public Players fkGoalPlayers_2() {
        return new Players(this, Keys.FK_GOAL_PLAYERS_2);
    }

    @Override
    public Goal as(String alias) {
        return new Goal(DSL.name(alias), this);
    }

    @Override
    public Goal as(Name alias) {
        return new Goal(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Goal rename(String name) {
        return new Goal(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Goal rename(Name name) {
        return new Goal(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, Integer, String, String, String, Boolean> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
