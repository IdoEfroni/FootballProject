/*
 * This file is generated by jOOQ.
 */
package dataLayer.Tables.tables.records;


import dataLayer.Tables.enums.TeammanagersPermissions;
import dataLayer.Tables.tables.Teammanagers;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TeammanagersRecord extends UpdatableRecordImpl<TeammanagersRecord> implements Record5<String, String, String, Integer, TeammanagersPermissions> {

    private static final long serialVersionUID = 1187918993;

    /**
     * Setter for <code>testdb3.teammanagers.managerID</code>.
     */
    public void setManagerid(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>testdb3.teammanagers.managerID</code>.
     */
    public String getManagerid() {
        return (String) get(0);
    }

    /**
     * Setter for <code>testdb3.teammanagers.teamID</code>.
     */
    public void setTeamid(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>testdb3.teammanagers.teamID</code>.
     */
    public String getTeamid() {
        return (String) get(1);
    }

    /**
     * Setter for <code>testdb3.teammanagers.teamOwnerID_fictive</code>.
     */
    public void setTeamowneridFictive(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>testdb3.teammanagers.teamOwnerID_fictive</code>.
     */
    public String getTeamowneridFictive() {
        return (String) get(2);
    }

    /**
     * Setter for <code>testdb3.teammanagers.salary</code>.
     */
    public void setSalary(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>testdb3.teammanagers.salary</code>.
     */
    public Integer getSalary() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>testdb3.teammanagers.permissions</code>.
     */
    public void setPermissions(TeammanagersPermissions value) {
        set(4, value);
    }

    /**
     * Getter for <code>testdb3.teammanagers.permissions</code>.
     */
    public TeammanagersPermissions getPermissions() {
        return (TeammanagersPermissions) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, String, String, Integer, TeammanagersPermissions> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<String, String, String, Integer, TeammanagersPermissions> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Teammanagers.TEAMMANAGERS.MANAGERID;
    }

    @Override
    public Field<String> field2() {
        return Teammanagers.TEAMMANAGERS.TEAMID;
    }

    @Override
    public Field<String> field3() {
        return Teammanagers.TEAMMANAGERS.TEAMOWNERID_FICTIVE;
    }

    @Override
    public Field<Integer> field4() {
        return Teammanagers.TEAMMANAGERS.SALARY;
    }

    @Override
    public Field<TeammanagersPermissions> field5() {
        return Teammanagers.TEAMMANAGERS.PERMISSIONS;
    }

    @Override
    public String component1() {
        return getManagerid();
    }

    @Override
    public String component2() {
        return getTeamid();
    }

    @Override
    public String component3() {
        return getTeamowneridFictive();
    }

    @Override
    public Integer component4() {
        return getSalary();
    }

    @Override
    public TeammanagersPermissions component5() {
        return getPermissions();
    }

    @Override
    public String value1() {
        return getManagerid();
    }

    @Override
    public String value2() {
        return getTeamid();
    }

    @Override
    public String value3() {
        return getTeamowneridFictive();
    }

    @Override
    public Integer value4() {
        return getSalary();
    }

    @Override
    public TeammanagersPermissions value5() {
        return getPermissions();
    }

    @Override
    public TeammanagersRecord value1(String value) {
        setManagerid(value);
        return this;
    }

    @Override
    public TeammanagersRecord value2(String value) {
        setTeamid(value);
        return this;
    }

    @Override
    public TeammanagersRecord value3(String value) {
        setTeamowneridFictive(value);
        return this;
    }

    @Override
    public TeammanagersRecord value4(Integer value) {
        setSalary(value);
        return this;
    }

    @Override
    public TeammanagersRecord value5(TeammanagersPermissions value) {
        setPermissions(value);
        return this;
    }

    @Override
    public TeammanagersRecord values(String value1, String value2, String value3, Integer value4, TeammanagersPermissions value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TeammanagersRecord
     */
    public TeammanagersRecord() {
        super(Teammanagers.TEAMMANAGERS);
    }

    /**
     * Create a detached, initialised TeammanagersRecord
     */
    public TeammanagersRecord(String managerid, String teamid, String teamowneridFictive, Integer salary, TeammanagersPermissions permissions) {
        super(Teammanagers.TEAMMANAGERS);

        set(0, managerid);
        set(1, teamid);
        set(2, teamowneridFictive);
        set(3, salary);
        set(4, permissions);
    }
}
