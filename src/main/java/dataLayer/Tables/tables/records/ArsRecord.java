/*
 * This file is generated by jOOQ.
 */
package dataLayer.Tables.tables.records;


import dataLayer.Tables.tables.Ars;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ArsRecord extends UpdatableRecordImpl<ArsRecord> implements Record2<String, Boolean> {

    private static final long serialVersionUID = 1343603218;

    /**
     * Setter for <code>demodb.ars.AR_ID</code>.
     */
    public void setArId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>demodb.ars.AR_ID</code>.
     */
    public String getArId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>demodb.ars.approved</code>.
     */
    public void setApproved(Boolean value) {
        set(1, value);
    }

    /**
     * Getter for <code>demodb.ars.approved</code>.
     */
    public Boolean getApproved() {
        return (Boolean) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, Boolean> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, Boolean> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Ars.ARS.AR_ID;
    }

    @Override
    public Field<Boolean> field2() {
        return Ars.ARS.APPROVED;
    }

    @Override
    public String component1() {
        return getArId();
    }

    @Override
    public Boolean component2() {
        return getApproved();
    }

    @Override
    public String value1() {
        return getArId();
    }

    @Override
    public Boolean value2() {
        return getApproved();
    }

    @Override
    public ArsRecord value1(String value) {
        setArId(value);
        return this;
    }

    @Override
    public ArsRecord value2(Boolean value) {
        setApproved(value);
        return this;
    }

    @Override
    public ArsRecord values(String value1, Boolean value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ArsRecord
     */
    public ArsRecord() {
        super(Ars.ARS);
    }

    /**
     * Create a detached, initialised ArsRecord
     */
    public ArsRecord(String arId, Boolean approved) {
        super(Ars.ARS);

        set(0, arId);
        set(1, approved);
    }
}
