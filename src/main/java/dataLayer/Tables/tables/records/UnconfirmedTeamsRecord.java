/*
 * This file is generated by jOOQ.
 */
package dataLayer.Tables.tables.records;


import dataLayer.Tables.tables.UnconfirmedTeams;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * all teams pending approval
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UnconfirmedTeamsRecord extends UpdatableRecordImpl<UnconfirmedTeamsRecord> implements Record3<String, Integer, String> {

    private static final long serialVersionUID = 1336680363;

    /**
     * Setter for <code>localsoccer.unconfirmed_teams.teamID</code>.
     */
    public void setTeamid(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>localsoccer.unconfirmed_teams.teamID</code>.
     */
    public String getTeamid() {
        return (String) get(0);
    }

    /**
     * Setter for <code>localsoccer.unconfirmed_teams.establishedYear</code>.
     */
    public void setEstablishedyear(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>localsoccer.unconfirmed_teams.establishedYear</code>.
     */
    public Integer getEstablishedyear() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>localsoccer.unconfirmed_teams.ownerID</code>.
     */
    public void setOwnerid(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>localsoccer.unconfirmed_teams.ownerID</code>.
     */
    public String getOwnerid() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, Integer, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, Integer, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return UnconfirmedTeams.UNCONFIRMED_TEAMS.TEAMID;
    }

    @Override
    public Field<Integer> field2() {
        return UnconfirmedTeams.UNCONFIRMED_TEAMS.ESTABLISHEDYEAR;
    }

    @Override
    public Field<String> field3() {
        return UnconfirmedTeams.UNCONFIRMED_TEAMS.OWNERID;
    }

    @Override
    public String component1() {
        return getTeamid();
    }

    @Override
    public Integer component2() {
        return getEstablishedyear();
    }

    @Override
    public String component3() {
        return getOwnerid();
    }

    @Override
    public String value1() {
        return getTeamid();
    }

    @Override
    public Integer value2() {
        return getEstablishedyear();
    }

    @Override
    public String value3() {
        return getOwnerid();
    }

    @Override
    public UnconfirmedTeamsRecord value1(String value) {
        setTeamid(value);
        return this;
    }

    @Override
    public UnconfirmedTeamsRecord value2(Integer value) {
        setEstablishedyear(value);
        return this;
    }

    @Override
    public UnconfirmedTeamsRecord value3(String value) {
        setOwnerid(value);
        return this;
    }

    @Override
    public UnconfirmedTeamsRecord values(String value1, Integer value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UnconfirmedTeamsRecord
     */
    public UnconfirmedTeamsRecord() {
        super(UnconfirmedTeams.UNCONFIRMED_TEAMS);
    }

    /**
     * Create a detached, initialised UnconfirmedTeamsRecord
     */
    public UnconfirmedTeamsRecord(String teamid, Integer establishedyear, String ownerid) {
        super(UnconfirmedTeams.UNCONFIRMED_TEAMS);

        set(0, teamid);
        set(1, establishedyear);
        set(2, ownerid);
    }
}
