/*
 * This file is generated by jOOQ.
 */
package dataLayer.Tables.tables.records;


import dataLayer.Tables.tables.MatchingPolicy;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MatchingPolicyRecord extends UpdatableRecordImpl<MatchingPolicyRecord> implements Record3<String, Integer, String> {

    private static final long serialVersionUID = 99840225;

    /**
     * Setter for <code>testdb3.matching policy.LeagueID</code>.
     */
    public void setLeagueid(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>testdb3.matching policy.LeagueID</code>.
     */
    public String getLeagueid() {
        return (String) get(0);
    }

    /**
     * Setter for <code>testdb3.matching policy.SeasonID</code>.
     */
    public void setSeasonid(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>testdb3.matching policy.SeasonID</code>.
     */
    public Integer getSeasonid() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>testdb3.matching policy.Type</code>.
     */
    public void setType(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>testdb3.matching policy.Type</code>.
     */
    public String getType() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, Integer, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, Integer, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return MatchingPolicy.MATCHING_POLICY.LEAGUEID;
    }

    @Override
    public Field<Integer> field2() {
        return MatchingPolicy.MATCHING_POLICY.SEASONID;
    }

    @Override
    public Field<String> field3() {
        return MatchingPolicy.MATCHING_POLICY.TYPE;
    }

    @Override
    public String component1() {
        return getLeagueid();
    }

    @Override
    public Integer component2() {
        return getSeasonid();
    }

    @Override
    public String component3() {
        return getType();
    }

    @Override
    public String value1() {
        return getLeagueid();
    }

    @Override
    public Integer value2() {
        return getSeasonid();
    }

    @Override
    public String value3() {
        return getType();
    }

    @Override
    public MatchingPolicyRecord value1(String value) {
        setLeagueid(value);
        return this;
    }

    @Override
    public MatchingPolicyRecord value2(Integer value) {
        setSeasonid(value);
        return this;
    }

    @Override
    public MatchingPolicyRecord value3(String value) {
        setType(value);
        return this;
    }

    @Override
    public MatchingPolicyRecord values(String value1, Integer value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MatchingPolicyRecord
     */
    public MatchingPolicyRecord() {
        super(MatchingPolicy.MATCHING_POLICY);
    }

    /**
     * Create a detached, initialised MatchingPolicyRecord
     */
    public MatchingPolicyRecord(String leagueid, Integer seasonid, String type) {
        super(MatchingPolicy.MATCHING_POLICY);

        set(0, leagueid);
        set(1, seasonid);
        set(2, type);
    }
}
