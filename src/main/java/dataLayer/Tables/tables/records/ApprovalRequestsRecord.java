/*
 * This file is generated by jOOQ.
 */
package dataLayer.Tables.tables.records;


import dataLayer.Tables.tables.ApprovalRequests;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ApprovalRequestsRecord extends UpdatableRecordImpl<ApprovalRequestsRecord> implements Record4<String, String, String, String> {

    private static final long serialVersionUID = -1632523537;

    /**
     * Setter for <code>testdb3.approval_requests.username</code>.
     */
    public void setUsername(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>testdb3.approval_requests.username</code>.
     */
    public String getUsername() {
        return (String) get(0);
    }

    /**
     * Setter for <code>testdb3.approval_requests.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>testdb3.approval_requests.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>testdb3.approval_requests.password</code>.
     */
    public void setPassword(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>testdb3.approval_requests.password</code>.
     */
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>testdb3.approval_requests.userType</code>.
     */
    public void setUsertype(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>testdb3.approval_requests.userType</code>.
     */
    public String getUsertype() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return ApprovalRequests.APPROVAL_REQUESTS.USERNAME;
    }

    @Override
    public Field<String> field2() {
        return ApprovalRequests.APPROVAL_REQUESTS.NAME;
    }

    @Override
    public Field<String> field3() {
        return ApprovalRequests.APPROVAL_REQUESTS.PASSWORD;
    }

    @Override
    public Field<String> field4() {
        return ApprovalRequests.APPROVAL_REQUESTS.USERTYPE;
    }

    @Override
    public String component1() {
        return getUsername();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getPassword();
    }

    @Override
    public String component4() {
        return getUsertype();
    }

    @Override
    public String value1() {
        return getUsername();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getPassword();
    }

    @Override
    public String value4() {
        return getUsertype();
    }

    @Override
    public ApprovalRequestsRecord value1(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public ApprovalRequestsRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public ApprovalRequestsRecord value3(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public ApprovalRequestsRecord value4(String value) {
        setUsertype(value);
        return this;
    }

    @Override
    public ApprovalRequestsRecord values(String value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ApprovalRequestsRecord
     */
    public ApprovalRequestsRecord() {
        super(ApprovalRequests.APPROVAL_REQUESTS);
    }

    /**
     * Create a detached, initialised ApprovalRequestsRecord
     */
    public ApprovalRequestsRecord(String username, String name, String password, String usertype) {
        super(ApprovalRequests.APPROVAL_REQUESTS);

        set(0, username);
        set(1, name);
        set(2, password);
        set(3, usertype);
    }
}
