/*
 * This file is generated by jOOQ.
 */
package dataLayer.Tables.tables.records;


import dataLayer.Tables.tables.OwnersOfStadium;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OwnersOfStadiumRecord extends UpdatableRecordImpl<OwnersOfStadiumRecord> implements Record2<String, String> {

    private static final long serialVersionUID = -1806543105;

    /**
     * Setter for <code>testdb3.owners_of_stadium.StadiumID</code>.
     */
    public void setStadiumid(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>testdb3.owners_of_stadium.StadiumID</code>.
     */
    public String getStadiumid() {
        return (String) get(0);
    }

    /**
     * Setter for <code>testdb3.owners_of_stadium.TeamID</code>.
     */
    public void setTeamid(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>testdb3.owners_of_stadium.TeamID</code>.
     */
    public String getTeamid() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return OwnersOfStadium.OWNERS_OF_STADIUM.STADIUMID;
    }

    @Override
    public Field<String> field2() {
        return OwnersOfStadium.OWNERS_OF_STADIUM.TEAMID;
    }

    @Override
    public String component1() {
        return getStadiumid();
    }

    @Override
    public String component2() {
        return getTeamid();
    }

    @Override
    public String value1() {
        return getStadiumid();
    }

    @Override
    public String value2() {
        return getTeamid();
    }

    @Override
    public OwnersOfStadiumRecord value1(String value) {
        setStadiumid(value);
        return this;
    }

    @Override
    public OwnersOfStadiumRecord value2(String value) {
        setTeamid(value);
        return this;
    }

    @Override
    public OwnersOfStadiumRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OwnersOfStadiumRecord
     */
    public OwnersOfStadiumRecord() {
        super(OwnersOfStadium.OWNERS_OF_STADIUM);
    }

    /**
     * Create a detached, initialised OwnersOfStadiumRecord
     */
    public OwnersOfStadiumRecord(String stadiumid, String teamid) {
        super(OwnersOfStadium.OWNERS_OF_STADIUM);

        set(0, stadiumid);
        set(1, teamid);
    }
}
